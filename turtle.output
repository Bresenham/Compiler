Terminals unused in grammar

   WHILST


State 62 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header declist commandList trailer

    2 header: %empty

    3 trailer: %empty

    4 declist: %empty
    5        | declist dec

    6 dec: VAR ID SEMICOLON

    7 $@1: %empty

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist commandList END

    9 paramlist: %empty
   10          | params

   11 params: ID
   12       | ID COMMA params

   13 commandList: %empty
   14            | commandList command

   15 forvarassign: ID ASSIGN expr

   16 varassign: forvarassign SEMICOLON

   17 command: varassign

   18 ifhead: IF bool THEN

   19 $@2: %empty

   20 $@3: %empty

   21 command: ifhead command ELSE $@2 $@3 command
   22        | ifhead command

   23 $@4: %empty

   24 $@5: %empty

   25 command: WHILE $@4 bool $@5 DO command

   26 $@6: %empty

   27 $@7: %empty

   28 command: FOR forvarassign $@6 WHILE bool $@7 STEP forvarassign DO command

   29 $@8: %empty

   30 $@9: %empty

   31 command: FOR varassign $@8 bool SEMICOLON $@9 varassign DO command

   32 $@10: %empty

   33 command: START $@10 declist commandList END
   34        | ID OPENPR arglist CLOSEDPR SEMICOLON

   35 arglist: %empty
   36        | args

   37 args: expr
   38     | args COMMA expr

   39 command: FORWARD SEMICOLON
   40        | FORWARD expr SEMICOLON
   41        | COLOR col SEMICOLON

   42 $@11: %empty

   43 $@12: %empty

   44 $@13: %empty

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON
   46        | TURN LEFT SEMICOLON
   47        | TURN RIGHT SEMICOLON
   48        | TURN LEFT expr SEMICOLON
   49        | TURN RIGHT expr SEMICOLON

   50 $@14: %empty

   51 command: $@14 CURVE expr COMMA expr COMMA expr SEMICOLON
   52        | SIZE expr SEMICOLON

   53 bool: bool OR frel
   54     | bool AND frel
   55     | frel

   56 frel: NOT rel
   57     | rel

   58 rel: expr LESS expr
   59    | expr GREATER expr
   60    | expr LESS ASSIGN expr
   61    | expr GREATER ASSIGN expr
   62    | expr NOT ASSIGN expr
   63    | expr ASSIGN ASSIGN expr
   64    | OPENPR rel CLOSEDPR

   65 expr: prod
   66     | expr MOD prod
   67     | expr PLUS prod
   68     | expr MINUS prod

   69 prod: factor
   70     | prod STAR factor
   71     | prod SLASH factor

   72 factor: atomic
   73       | PLUS atomic
   74       | MINUS atomic

   75 atomic: ID
   76       | INTEGER
   77       | DOUBLE
   78       | OPENPR expr CLOSEDPR

   79 col: RED
   80    | GREEN
   81    | BLUE
   82    | BLACK


Terminals, with rules where they appear

$end (0) 0
error (256)
FORWARD (258) 39 40
TURN (259) 46 47 48 49
RIGHT (260) 47 49
LEFT (261) 46 48
COLOR (262) 41 45
RED (263) 79
GREEN (264) 80
BLUE (265) 81
BLACK (266) 82
RGB (267) 45
VAR (268) 6
PLUS (269) 67 73
MINUS (270) 68 74
STAR (271) 70
SLASH (272) 71
OPENPR (273) 8 34 45 64 78
CLOSEDPR (274) 8 34 45 64 78
IF (275) 18
THEN (276) 18
AND (277) 54
OR (278) 53
ELSE (279) 21
WHILE (280) 25 28
DO (281) 25 28 31
FOR (282) 28 31
WHILST (283)
INTEGER (284) 76
DOUBLE (285) 77
ID (286) 6 8 11 12 15 34 75
CURVE (287) 51
SIZE (288) 52
COMMA (289) 12 38 45 51
SEMICOLON (290) 6 16 31 34 39 40 41 45 46 47 48 49 51 52
ASSIGN (291) 15 60 61 62 63
PROCEDURE (292) 8
LESS (293) 58 60
GREATER (294) 59 61
NOT (295) 56 62
STEP (296) 28
START (297) 8 33
END (298) 8 33
MOD (299) 66


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
header (47)
    on left: 2, on right: 1
trailer (48)
    on left: 3, on right: 1
declist (49)
    on left: 4 5, on right: 1 5 8 33
dec (50)
    on left: 6 8, on right: 5
$@1 (51)
    on left: 7, on right: 8
paramlist (52)
    on left: 9 10, on right: 8
params (53)
    on left: 11 12, on right: 10 12
commandList (54)
    on left: 13 14, on right: 1 8 14 33
forvarassign (55)
    on left: 15, on right: 16 28
varassign (56)
    on left: 16, on right: 17 31
command (57)
    on left: 17 21 22 25 28 31 33 34 39 40 41 45 46 47 48 49 51 52,
    on right: 14 21 22 25 28 31
ifhead (58)
    on left: 18, on right: 21 22
$@2 (59)
    on left: 19, on right: 21
$@3 (60)
    on left: 20, on right: 21
$@4 (61)
    on left: 23, on right: 25
$@5 (62)
    on left: 24, on right: 25
$@6 (63)
    on left: 26, on right: 28
$@7 (64)
    on left: 27, on right: 28
$@8 (65)
    on left: 29, on right: 31
$@9 (66)
    on left: 30, on right: 31
$@10 (67)
    on left: 32, on right: 33
arglist (68)
    on left: 35 36, on right: 34
args (69)
    on left: 37 38, on right: 36 38
$@11 (70)
    on left: 42, on right: 45
$@12 (71)
    on left: 43, on right: 45
$@13 (72)
    on left: 44, on right: 45
$@14 (73)
    on left: 50, on right: 51
bool (74)
    on left: 53 54 55, on right: 18 25 28 31 53 54
frel (75)
    on left: 56 57, on right: 53 54 55
rel (76)
    on left: 58 59 60 61 62 63 64, on right: 56 57 64
expr (77)
    on left: 65 66 67 68, on right: 15 37 38 40 45 48 49 51 52 58 59
    60 61 62 63 66 67 68 78
prod (78)
    on left: 69 70 71, on right: 65 66 67 68 70 71
factor (79)
    on left: 72 73 74, on right: 69 70 71
atomic (80)
    on left: 75 76 77 78, on right: 72 73 74
col (81)
    on left: 79 80 81 82, on right: 41


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (header)

    program  go to state 1
    header   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: header . declist commandList trailer

    $default  reduce using rule 4 (declist)

    declist  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    1 program: header declist . commandList trailer
    5 declist: declist . dec

    VAR        shift, and go to state 5
    PROCEDURE  shift, and go to state 6

    $default  reduce using rule 13 (commandList)

    dec          go to state 7
    commandList  go to state 8


State 5

    6 dec: VAR . ID SEMICOLON

    ID  shift, and go to state 9


State 6

    8 dec: PROCEDURE . ID $@1 OPENPR paramlist CLOSEDPR START declist commandList END

    ID  shift, and go to state 10


State 7

    5 declist: declist dec .

    $default  reduce using rule 5 (declist)


State 8

    1 program: header declist commandList . trailer
   14 commandList: commandList . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    CURVE     reduce using rule 50 ($@14)
    $default  reduce using rule 3 (trailer)

    trailer       go to state 20
    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 23
    ifhead        go to state 24
    $@14          go to state 25


State 9

    6 dec: VAR ID . SEMICOLON

    SEMICOLON  shift, and go to state 26


State 10

    8 dec: PROCEDURE ID . $@1 OPENPR paramlist CLOSEDPR START declist commandList END

    $default  reduce using rule 7 ($@1)

    $@1  go to state 27


State 11

   39 command: FORWARD . SEMICOLON
   40        | FORWARD . expr SEMICOLON

    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    OPENPR     shift, and go to state 30
    INTEGER    shift, and go to state 31
    DOUBLE     shift, and go to state 32
    ID         shift, and go to state 33
    SEMICOLON  shift, and go to state 34

    expr    go to state 35
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 12

   46 command: TURN . LEFT SEMICOLON
   47        | TURN . RIGHT SEMICOLON
   48        | TURN . LEFT expr SEMICOLON
   49        | TURN . RIGHT expr SEMICOLON

    RIGHT  shift, and go to state 39
    LEFT   shift, and go to state 40


State 13

   41 command: COLOR . col SEMICOLON
   45        | COLOR . RGB OPENPR expr $@11 COMMA expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON

    RED    shift, and go to state 41
    GREEN  shift, and go to state 42
    BLUE   shift, and go to state 43
    BLACK  shift, and go to state 44
    RGB    shift, and go to state 45

    col  go to state 46


State 14

   18 ifhead: IF . bool THEN

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    NOT      shift, and go to state 48

    bool    go to state 49
    frel    go to state 50
    rel     go to state 51
    expr    go to state 52
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 15

   25 command: WHILE . $@4 bool $@5 DO command

    $default  reduce using rule 23 ($@4)

    $@4  go to state 53


State 16

   28 command: FOR . forvarassign $@6 WHILE bool $@7 STEP forvarassign DO command
   31        | FOR . varassign $@8 bool SEMICOLON $@9 varassign DO command

    ID  shift, and go to state 54

    forvarassign  go to state 55
    varassign     go to state 56


State 17

   15 forvarassign: ID . ASSIGN expr
   34 command: ID . OPENPR arglist CLOSEDPR SEMICOLON

    OPENPR  shift, and go to state 57
    ASSIGN  shift, and go to state 58


State 18

   52 command: SIZE . expr SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 59
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 19

   33 command: START . $@10 declist commandList END

    $default  reduce using rule 32 ($@10)

    $@10  go to state 60


State 20

    1 program: header declist commandList trailer .

    $default  reduce using rule 1 (program)


State 21

   16 varassign: forvarassign . SEMICOLON

    SEMICOLON  shift, and go to state 61


State 22

   17 command: varassign .

    $default  reduce using rule 17 (command)


State 23

   14 commandList: commandList command .

    $default  reduce using rule 14 (commandList)


State 24

   21 command: ifhead . command ELSE $@2 $@3 command
   22        | ifhead . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 50 ($@14)

    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 62
    ifhead        go to state 24
    $@14          go to state 25


State 25

   51 command: $@14 . CURVE expr COMMA expr COMMA expr SEMICOLON

    CURVE  shift, and go to state 63


State 26

    6 dec: VAR ID SEMICOLON .

    $default  reduce using rule 6 (dec)


State 27

    8 dec: PROCEDURE ID $@1 . OPENPR paramlist CLOSEDPR START declist commandList END

    OPENPR  shift, and go to state 64


State 28

   73 factor: PLUS . atomic

    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    atomic  go to state 65


State 29

   74 factor: MINUS . atomic

    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    atomic  go to state 66


State 30

   78 atomic: OPENPR . expr CLOSEDPR

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 67
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 31

   76 atomic: INTEGER .

    $default  reduce using rule 76 (atomic)


State 32

   77 atomic: DOUBLE .

    $default  reduce using rule 77 (atomic)


State 33

   75 atomic: ID .

    $default  reduce using rule 75 (atomic)


State 34

   39 command: FORWARD SEMICOLON .

    $default  reduce using rule 39 (command)


State 35

   40 command: FORWARD expr . SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    SEMICOLON  shift, and go to state 70
    MOD        shift, and go to state 71


State 36

   65 expr: prod .
   70 prod: prod . STAR factor
   71     | prod . SLASH factor

    STAR   shift, and go to state 72
    SLASH  shift, and go to state 73

    $default  reduce using rule 65 (expr)


State 37

   69 prod: factor .

    $default  reduce using rule 69 (prod)


State 38

   72 factor: atomic .

    $default  reduce using rule 72 (factor)


State 39

   47 command: TURN RIGHT . SEMICOLON
   49        | TURN RIGHT . expr SEMICOLON

    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    OPENPR     shift, and go to state 30
    INTEGER    shift, and go to state 31
    DOUBLE     shift, and go to state 32
    ID         shift, and go to state 33
    SEMICOLON  shift, and go to state 74

    expr    go to state 75
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 40

   46 command: TURN LEFT . SEMICOLON
   48        | TURN LEFT . expr SEMICOLON

    PLUS       shift, and go to state 28
    MINUS      shift, and go to state 29
    OPENPR     shift, and go to state 30
    INTEGER    shift, and go to state 31
    DOUBLE     shift, and go to state 32
    ID         shift, and go to state 33
    SEMICOLON  shift, and go to state 76

    expr    go to state 77
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 41

   79 col: RED .

    $default  reduce using rule 79 (col)


State 42

   80 col: GREEN .

    $default  reduce using rule 80 (col)


State 43

   81 col: BLUE .

    $default  reduce using rule 81 (col)


State 44

   82 col: BLACK .

    $default  reduce using rule 82 (col)


State 45

   45 command: COLOR RGB . OPENPR expr $@11 COMMA expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON

    OPENPR  shift, and go to state 78


State 46

   41 command: COLOR col . SEMICOLON

    SEMICOLON  shift, and go to state 79


State 47

   64 rel: OPENPR . rel CLOSEDPR
   78 atomic: OPENPR . expr CLOSEDPR

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    rel     go to state 80
    expr    go to state 81
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 48

   56 frel: NOT . rel

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    rel     go to state 82
    expr    go to state 52
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 49

   18 ifhead: IF bool . THEN
   53 bool: bool . OR frel
   54     | bool . AND frel

    THEN  shift, and go to state 83
    AND   shift, and go to state 84
    OR    shift, and go to state 85


State 50

   55 bool: frel .

    $default  reduce using rule 55 (bool)


State 51

   57 frel: rel .

    $default  reduce using rule 57 (frel)


State 52

   58 rel: expr . LESS expr
   59    | expr . GREATER expr
   60    | expr . LESS ASSIGN expr
   61    | expr . GREATER ASSIGN expr
   62    | expr . NOT ASSIGN expr
   63    | expr . ASSIGN ASSIGN expr
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS     shift, and go to state 68
    MINUS    shift, and go to state 69
    ASSIGN   shift, and go to state 86
    LESS     shift, and go to state 87
    GREATER  shift, and go to state 88
    NOT      shift, and go to state 89
    MOD      shift, and go to state 71


State 53

   25 command: WHILE $@4 . bool $@5 DO command

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    NOT      shift, and go to state 48

    bool    go to state 90
    frel    go to state 50
    rel     go to state 51
    expr    go to state 52
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 54

   15 forvarassign: ID . ASSIGN expr

    ASSIGN  shift, and go to state 58


State 55

   16 varassign: forvarassign . SEMICOLON
   28 command: FOR forvarassign . $@6 WHILE bool $@7 STEP forvarassign DO command

    SEMICOLON  shift, and go to state 61

    $default  reduce using rule 26 ($@6)

    $@6  go to state 91


State 56

   31 command: FOR varassign . $@8 bool SEMICOLON $@9 varassign DO command

    $default  reduce using rule 29 ($@8)

    $@8  go to state 92


State 57

   34 command: ID OPENPR . arglist CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    $default  reduce using rule 35 (arglist)

    arglist  go to state 93
    args     go to state 94
    expr     go to state 95
    prod     go to state 36
    factor   go to state 37
    atomic   go to state 38


State 58

   15 forvarassign: ID ASSIGN . expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 96
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 59

   52 command: SIZE expr . SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    SEMICOLON  shift, and go to state 97
    MOD        shift, and go to state 71


State 60

   33 command: START $@10 . declist commandList END

    $default  reduce using rule 4 (declist)

    declist  go to state 98


State 61

   16 varassign: forvarassign SEMICOLON .

    $default  reduce using rule 16 (varassign)


State 62

   21 command: ifhead command . ELSE $@2 $@3 command
   22        | ifhead command .

    ELSE  shift, and go to state 99

    ELSE      [reduce using rule 22 (command)]
    $default  reduce using rule 22 (command)


State 63

   51 command: $@14 CURVE . expr COMMA expr COMMA expr SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 100
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 64

    8 dec: PROCEDURE ID $@1 OPENPR . paramlist CLOSEDPR START declist commandList END

    ID  shift, and go to state 101

    $default  reduce using rule 9 (paramlist)

    paramlist  go to state 102
    params     go to state 103


State 65

   73 factor: PLUS atomic .

    $default  reduce using rule 73 (factor)


State 66

   74 factor: MINUS atomic .

    $default  reduce using rule 74 (factor)


State 67

   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod
   78 atomic: OPENPR expr . CLOSEDPR

    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    CLOSEDPR  shift, and go to state 104
    MOD       shift, and go to state 71


State 68

   67 expr: expr PLUS . prod

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    prod    go to state 105
    factor  go to state 37
    atomic  go to state 38


State 69

   68 expr: expr MINUS . prod

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    prod    go to state 106
    factor  go to state 37
    atomic  go to state 38


State 70

   40 command: FORWARD expr SEMICOLON .

    $default  reduce using rule 40 (command)


State 71

   66 expr: expr MOD . prod

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    prod    go to state 107
    factor  go to state 37
    atomic  go to state 38


State 72

   70 prod: prod STAR . factor

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    factor  go to state 108
    atomic  go to state 38


State 73

   71 prod: prod SLASH . factor

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    factor  go to state 109
    atomic  go to state 38


State 74

   47 command: TURN RIGHT SEMICOLON .

    $default  reduce using rule 47 (command)


State 75

   49 command: TURN RIGHT expr . SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    SEMICOLON  shift, and go to state 110
    MOD        shift, and go to state 71


State 76

   46 command: TURN LEFT SEMICOLON .

    $default  reduce using rule 46 (command)


State 77

   48 command: TURN LEFT expr . SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    SEMICOLON  shift, and go to state 111
    MOD        shift, and go to state 71


State 78

   45 command: COLOR RGB OPENPR . expr $@11 COMMA expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 112
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 79

   41 command: COLOR col SEMICOLON .

    $default  reduce using rule 41 (command)


State 80

   64 rel: OPENPR rel . CLOSEDPR

    CLOSEDPR  shift, and go to state 113


State 81

   58 rel: expr . LESS expr
   59    | expr . GREATER expr
   60    | expr . LESS ASSIGN expr
   61    | expr . GREATER ASSIGN expr
   62    | expr . NOT ASSIGN expr
   63    | expr . ASSIGN ASSIGN expr
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod
   78 atomic: OPENPR expr . CLOSEDPR

    PLUS      shift, and go to state 68
    MINUS     shift, and go to state 69
    CLOSEDPR  shift, and go to state 104
    ASSIGN    shift, and go to state 86
    LESS      shift, and go to state 87
    GREATER   shift, and go to state 88
    NOT       shift, and go to state 89
    MOD       shift, and go to state 71


State 82

   56 frel: NOT rel .

    $default  reduce using rule 56 (frel)


State 83

   18 ifhead: IF bool THEN .

    $default  reduce using rule 18 (ifhead)


State 84

   54 bool: bool AND . frel

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    NOT      shift, and go to state 48

    frel    go to state 114
    rel     go to state 51
    expr    go to state 52
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 85

   53 bool: bool OR . frel

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    NOT      shift, and go to state 48

    frel    go to state 115
    rel     go to state 51
    expr    go to state 52
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 86

   63 rel: expr ASSIGN . ASSIGN expr

    ASSIGN  shift, and go to state 116


State 87

   58 rel: expr LESS . expr
   60    | expr LESS . ASSIGN expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    ASSIGN   shift, and go to state 117

    expr    go to state 118
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 88

   59 rel: expr GREATER . expr
   61    | expr GREATER . ASSIGN expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    ASSIGN   shift, and go to state 119

    expr    go to state 120
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 89

   62 rel: expr NOT . ASSIGN expr

    ASSIGN  shift, and go to state 121


State 90

   25 command: WHILE $@4 bool . $@5 DO command
   53 bool: bool . OR frel
   54     | bool . AND frel

    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 24 ($@5)

    $@5  go to state 122


State 91

   28 command: FOR forvarassign $@6 . WHILE bool $@7 STEP forvarassign DO command

    WHILE  shift, and go to state 123


State 92

   31 command: FOR varassign $@8 . bool SEMICOLON $@9 varassign DO command

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    NOT      shift, and go to state 48

    bool    go to state 124
    frel    go to state 50
    rel     go to state 51
    expr    go to state 52
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 93

   34 command: ID OPENPR arglist . CLOSEDPR SEMICOLON

    CLOSEDPR  shift, and go to state 125


State 94

   36 arglist: args .
   38 args: args . COMMA expr

    COMMA  shift, and go to state 126

    $default  reduce using rule 36 (arglist)


State 95

   37 args: expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 37 (args)


State 96

   15 forvarassign: ID ASSIGN expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 15 (forvarassign)


State 97

   52 command: SIZE expr SEMICOLON .

    $default  reduce using rule 52 (command)


State 98

    5 declist: declist . dec
   33 command: START $@10 declist . commandList END

    VAR        shift, and go to state 5
    PROCEDURE  shift, and go to state 6

    $default  reduce using rule 13 (commandList)

    dec          go to state 7
    commandList  go to state 127


State 99

   21 command: ifhead command ELSE . $@2 $@3 command

    $default  reduce using rule 19 ($@2)

    $@2  go to state 128


State 100

   51 command: $@14 CURVE expr . COMMA expr COMMA expr SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    COMMA  shift, and go to state 129
    MOD    shift, and go to state 71


State 101

   11 params: ID .
   12       | ID . COMMA params

    COMMA  shift, and go to state 130

    $default  reduce using rule 11 (params)


State 102

    8 dec: PROCEDURE ID $@1 OPENPR paramlist . CLOSEDPR START declist commandList END

    CLOSEDPR  shift, and go to state 131


State 103

   10 paramlist: params .

    $default  reduce using rule 10 (paramlist)


State 104

   78 atomic: OPENPR expr CLOSEDPR .

    $default  reduce using rule 78 (atomic)


State 105

   67 expr: expr PLUS prod .
   70 prod: prod . STAR factor
   71     | prod . SLASH factor

    STAR   shift, and go to state 72
    SLASH  shift, and go to state 73

    $default  reduce using rule 67 (expr)


State 106

   68 expr: expr MINUS prod .
   70 prod: prod . STAR factor
   71     | prod . SLASH factor

    STAR   shift, and go to state 72
    SLASH  shift, and go to state 73

    $default  reduce using rule 68 (expr)


State 107

   66 expr: expr MOD prod .
   70 prod: prod . STAR factor
   71     | prod . SLASH factor

    STAR   shift, and go to state 72
    SLASH  shift, and go to state 73

    $default  reduce using rule 66 (expr)


State 108

   70 prod: prod STAR factor .

    $default  reduce using rule 70 (prod)


State 109

   71 prod: prod SLASH factor .

    $default  reduce using rule 71 (prod)


State 110

   49 command: TURN RIGHT expr SEMICOLON .

    $default  reduce using rule 49 (command)


State 111

   48 command: TURN LEFT expr SEMICOLON .

    $default  reduce using rule 48 (command)


State 112

   45 command: COLOR RGB OPENPR expr . $@11 COMMA expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 42 ($@11)

    $@11  go to state 132


State 113

   64 rel: OPENPR rel CLOSEDPR .

    $default  reduce using rule 64 (rel)


State 114

   54 bool: bool AND frel .

    $default  reduce using rule 54 (bool)


State 115

   53 bool: bool OR frel .

    $default  reduce using rule 53 (bool)


State 116

   63 rel: expr ASSIGN ASSIGN . expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 133
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 117

   60 rel: expr LESS ASSIGN . expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 134
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 118

   58 rel: expr LESS expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 58 (rel)


State 119

   61 rel: expr GREATER ASSIGN . expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 135
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 120

   59 rel: expr GREATER expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 59 (rel)


State 121

   62 rel: expr NOT ASSIGN . expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 136
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 122

   25 command: WHILE $@4 bool $@5 . DO command

    DO  shift, and go to state 137


State 123

   28 command: FOR forvarassign $@6 WHILE . bool $@7 STEP forvarassign DO command

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 47
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33
    NOT      shift, and go to state 48

    bool    go to state 138
    frel    go to state 50
    rel     go to state 51
    expr    go to state 52
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 124

   31 command: FOR varassign $@8 bool . SEMICOLON $@9 varassign DO command
   53 bool: bool . OR frel
   54     | bool . AND frel

    AND        shift, and go to state 84
    OR         shift, and go to state 85
    SEMICOLON  shift, and go to state 139


State 125

   34 command: ID OPENPR arglist CLOSEDPR . SEMICOLON

    SEMICOLON  shift, and go to state 140


State 126

   38 args: args COMMA . expr

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 141
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 127

   14 commandList: commandList . command
   33 command: START $@10 declist commandList . END

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19
    END      shift, and go to state 142

    $default  reduce using rule 50 ($@14)

    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 23
    ifhead        go to state 24
    $@14          go to state 25


State 128

   21 command: ifhead command ELSE $@2 . $@3 command

    $default  reduce using rule 20 ($@3)

    $@3  go to state 143


State 129

   51 command: $@14 CURVE expr COMMA . expr COMMA expr SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 144
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 130

   12 params: ID COMMA . params

    ID  shift, and go to state 101

    params  go to state 145


State 131

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR . START declist commandList END

    START  shift, and go to state 146


State 132

   45 command: COLOR RGB OPENPR expr $@11 . COMMA expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON

    COMMA  shift, and go to state 147


State 133

   63 rel: expr ASSIGN ASSIGN expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 63 (rel)


State 134

   60 rel: expr LESS ASSIGN expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 60 (rel)


State 135

   61 rel: expr GREATER ASSIGN expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 61 (rel)


State 136

   62 rel: expr NOT ASSIGN expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 62 (rel)


State 137

   25 command: WHILE $@4 bool $@5 DO . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 50 ($@14)

    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 148
    ifhead        go to state 24
    $@14          go to state 25


State 138

   28 command: FOR forvarassign $@6 WHILE bool . $@7 STEP forvarassign DO command
   53 bool: bool . OR frel
   54     | bool . AND frel

    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 27 ($@7)

    $@7  go to state 149


State 139

   31 command: FOR varassign $@8 bool SEMICOLON . $@9 varassign DO command

    $default  reduce using rule 30 ($@9)

    $@9  go to state 150


State 140

   34 command: ID OPENPR arglist CLOSEDPR SEMICOLON .

    $default  reduce using rule 34 (command)


State 141

   38 args: args COMMA expr .
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 38 (args)


State 142

   33 command: START $@10 declist commandList END .

    $default  reduce using rule 33 (command)


State 143

   21 command: ifhead command ELSE $@2 $@3 . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 50 ($@14)

    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 151
    ifhead        go to state 24
    $@14          go to state 25


State 144

   51 command: $@14 CURVE expr COMMA expr . COMMA expr SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    COMMA  shift, and go to state 152
    MOD    shift, and go to state 71


State 145

   12 params: ID COMMA params .

    $default  reduce using rule 12 (params)


State 146

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START . declist commandList END

    $default  reduce using rule 4 (declist)

    declist  go to state 153


State 147

   45 command: COLOR RGB OPENPR expr $@11 COMMA . expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 154
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 148

   25 command: WHILE $@4 bool $@5 DO command .

    $default  reduce using rule 25 (command)


State 149

   28 command: FOR forvarassign $@6 WHILE bool $@7 . STEP forvarassign DO command

    STEP  shift, and go to state 155


State 150

   31 command: FOR varassign $@8 bool SEMICOLON $@9 . varassign DO command

    ID  shift, and go to state 54

    forvarassign  go to state 21
    varassign     go to state 156


State 151

   21 command: ifhead command ELSE $@2 $@3 command .

    $default  reduce using rule 21 (command)


State 152

   51 command: $@14 CURVE expr COMMA expr COMMA . expr SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 157
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 153

    5 declist: declist . dec
    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist . commandList END

    VAR        shift, and go to state 5
    PROCEDURE  shift, and go to state 6

    $default  reduce using rule 13 (commandList)

    dec          go to state 7
    commandList  go to state 158


State 154

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr . $@12 COMMA expr $@13 CLOSEDPR SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 43 ($@12)

    $@12  go to state 159


State 155

   28 command: FOR forvarassign $@6 WHILE bool $@7 STEP . forvarassign DO command

    ID  shift, and go to state 54

    forvarassign  go to state 160


State 156

   31 command: FOR varassign $@8 bool SEMICOLON $@9 varassign . DO command

    DO  shift, and go to state 161


State 157

   51 command: $@14 CURVE expr COMMA expr COMMA expr . SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS       shift, and go to state 68
    MINUS      shift, and go to state 69
    SEMICOLON  shift, and go to state 162
    MOD        shift, and go to state 71


State 158

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist commandList . END
   14 commandList: commandList . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19
    END      shift, and go to state 163

    $default  reduce using rule 50 ($@14)

    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 23
    ifhead        go to state 24
    $@14          go to state 25


State 159

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr $@12 . COMMA expr $@13 CLOSEDPR SEMICOLON

    COMMA  shift, and go to state 164


State 160

   28 command: FOR forvarassign $@6 WHILE bool $@7 STEP forvarassign . DO command

    DO  shift, and go to state 165


State 161

   31 command: FOR varassign $@8 bool SEMICOLON $@9 varassign DO . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 50 ($@14)

    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 166
    ifhead        go to state 24
    $@14          go to state 25


State 162

   51 command: $@14 CURVE expr COMMA expr COMMA expr SEMICOLON .

    $default  reduce using rule 51 (command)


State 163

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist commandList END .

    $default  reduce using rule 8 (dec)


State 164

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr $@12 COMMA . expr $@13 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 28
    MINUS    shift, and go to state 29
    OPENPR   shift, and go to state 30
    INTEGER  shift, and go to state 31
    DOUBLE   shift, and go to state 32
    ID       shift, and go to state 33

    expr    go to state 167
    prod    go to state 36
    factor  go to state 37
    atomic  go to state 38


State 165

   28 command: FOR forvarassign $@6 WHILE bool $@7 STEP forvarassign DO . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 50 ($@14)

    forvarassign  go to state 21
    varassign     go to state 22
    command       go to state 168
    ifhead        go to state 24
    $@14          go to state 25


State 166

   31 command: FOR varassign $@8 bool SEMICOLON $@9 varassign DO command .

    $default  reduce using rule 31 (command)


State 167

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr $@12 COMMA expr . $@13 CLOSEDPR SEMICOLON
   66 expr: expr . MOD prod
   67     | expr . PLUS prod
   68     | expr . MINUS prod

    PLUS   shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 71

    $default  reduce using rule 44 ($@13)

    $@13  go to state 169


State 168

   28 command: FOR forvarassign $@6 WHILE bool $@7 STEP forvarassign DO command .

    $default  reduce using rule 28 (command)


State 169

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr $@12 COMMA expr $@13 . CLOSEDPR SEMICOLON

    CLOSEDPR  shift, and go to state 170


State 170

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr $@12 COMMA expr $@13 CLOSEDPR . SEMICOLON

    SEMICOLON  shift, and go to state 171


State 171

   45 command: COLOR RGB OPENPR expr $@11 COMMA expr $@12 COMMA expr $@13 CLOSEDPR SEMICOLON .

    $default  reduce using rule 45 (command)
