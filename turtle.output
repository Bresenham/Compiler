Terminals unused in grammar

   WHILST


State 54 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header declist commandList trailer

    2 header: %empty

    3 trailer: %empty

    4 declist: %empty
    5        | declist dec

    6 dec: VAR ID SEMICOLON

    7 commandList: %empty
    8            | commandList command

    9 varassign: ID ASSIGN expr SEMICOLON

   10 command: varassign

   11 ifhead: IF bool THEN

   12 $@1: %empty

   13 $@2: %empty

   14 command: ifhead command ELSE $@1 $@2 command
   15        | ifhead command

   16 $@3: %empty

   17 $@4: %empty

   18 command: WHILE $@3 bool $@4 DO command

   19 $@5: %empty

   20 $@6: %empty

   21 command: FOR varassign $@5 bool SEMICOLON $@6 varassign DO command

   22 $@7: %empty

   23 command: START $@7 declist commandList END
   24        | FORWARD SEMICOLON
   25        | FORWARD expr SEMICOLON
   26        | COLOR col SEMICOLON

   27 $@8: %empty

   28 $@9: %empty

   29 $@10: %empty

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON
   31        | TURN LEFT SEMICOLON
   32        | TURN RIGHT SEMICOLON
   33        | TURN LEFT expr SEMICOLON
   34        | TURN RIGHT expr SEMICOLON

   35 $@11: %empty

   36 command: $@11 CURVE expr COMMA expr COMMA expr SEMICOLON
   37        | SIZE expr SEMICOLON

   38 bool: bool OR frel
   39     | bool AND frel
   40     | frel

   41 frel: NOT rel
   42     | rel

   43 rel: expr LESS expr
   44    | expr GREATER expr
   45    | expr LESS ASSIGN expr
   46    | expr GREATER ASSIGN expr
   47    | expr NOT ASSIGN expr
   48    | expr ASSIGN ASSIGN expr
   49    | OPENPR rel CLOSEDPR

   50 expr: prod
   51     | expr PLUS prod
   52     | expr MINUS prod

   53 prod: factor
   54     | prod STAR factor
   55     | prod SLASH factor

   56 factor: atomic
   57       | PLUS atomic
   58       | MINUS atomic

   59 atomic: ID
   60       | INTEGER
   61       | DOUBLE
   62       | OPENPR expr CLOSEDPR

   63 col: RED
   64    | GREEN
   65    | BLUE
   66    | BLACK


Terminals, with rules where they appear

$end (0) 0
error (256)
FORWARD (258) 24 25
TURN (259) 31 32 33 34
RIGHT (260) 32 34
LEFT (261) 31 33
COLOR (262) 26 30
RED (263) 63
GREEN (264) 64
BLUE (265) 65
BLACK (266) 66
RGB (267) 30
VAR (268) 6
PLUS (269) 51 57
MINUS (270) 52 58
STAR (271) 54
SLASH (272) 55
OPENPR (273) 30 49 62
CLOSEDPR (274) 30 49 62
IF (275) 11
THEN (276) 11
AND (277) 39
OR (278) 38
ELSE (279) 14
WHILE (280) 18
DO (281) 18 21
FOR (282) 21
WHILST (283)
INTEGER (284) 60
DOUBLE (285) 61
ID (286) 6 9 59
CURVE (287) 36
SIZE (288) 37
COMMA (289) 30 36
SEMICOLON (290) 6 9 21 24 25 26 30 31 32 33 34 36 37
ASSIGN (291) 9 45 46 47 48
LESS (292) 43 45
GREATER (293) 44 46
NOT (294) 41 47
START (295) 23
END (296) 23


Nonterminals, with rules where they appear

$accept (42)
    on left: 0
program (43)
    on left: 1, on right: 0
header (44)
    on left: 2, on right: 1
trailer (45)
    on left: 3, on right: 1
declist (46)
    on left: 4 5, on right: 1 5 23
dec (47)
    on left: 6, on right: 5
commandList (48)
    on left: 7 8, on right: 1 8 23
varassign (49)
    on left: 9, on right: 10 21
command (50)
    on left: 10 14 15 18 21 23 24 25 26 30 31 32 33 34 36 37, on right:
    8 14 15 18 21
ifhead (51)
    on left: 11, on right: 14 15
$@1 (52)
    on left: 12, on right: 14
$@2 (53)
    on left: 13, on right: 14
$@3 (54)
    on left: 16, on right: 18
$@4 (55)
    on left: 17, on right: 18
$@5 (56)
    on left: 19, on right: 21
$@6 (57)
    on left: 20, on right: 21
$@7 (58)
    on left: 22, on right: 23
$@8 (59)
    on left: 27, on right: 30
$@9 (60)
    on left: 28, on right: 30
$@10 (61)
    on left: 29, on right: 30
$@11 (62)
    on left: 35, on right: 36
bool (63)
    on left: 38 39 40, on right: 11 18 21 38 39
frel (64)
    on left: 41 42, on right: 38 39 40
rel (65)
    on left: 43 44 45 46 47 48 49, on right: 41 42 49
expr (66)
    on left: 50 51 52, on right: 9 25 30 33 34 36 37 43 44 45 46 47
    48 51 52 62
prod (67)
    on left: 53 54 55, on right: 50 51 52 54 55
factor (68)
    on left: 56 57 58, on right: 53 54 55
atomic (69)
    on left: 59 60 61 62, on right: 56 57 58
col (70)
    on left: 63 64 65 66, on right: 26


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (header)

    program  go to state 1
    header   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: header . declist commandList trailer

    $default  reduce using rule 4 (declist)

    declist  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    1 program: header declist . commandList trailer
    5 declist: declist . dec

    VAR  shift, and go to state 5

    $default  reduce using rule 7 (commandList)

    dec          go to state 6
    commandList  go to state 7


State 5

    6 dec: VAR . ID SEMICOLON

    ID  shift, and go to state 8


State 6

    5 declist: declist dec .

    $default  reduce using rule 5 (declist)


State 7

    1 program: header declist commandList . trailer
    8 commandList: commandList . command

    FORWARD  shift, and go to state 9
    TURN     shift, and go to state 10
    COLOR    shift, and go to state 11
    IF       shift, and go to state 12
    WHILE    shift, and go to state 13
    FOR      shift, and go to state 14
    ID       shift, and go to state 15
    SIZE     shift, and go to state 16
    START    shift, and go to state 17

    CURVE     reduce using rule 35 ($@11)
    $default  reduce using rule 3 (trailer)

    trailer    go to state 18
    varassign  go to state 19
    command    go to state 20
    ifhead     go to state 21
    $@11       go to state 22


State 8

    6 dec: VAR ID . SEMICOLON

    SEMICOLON  shift, and go to state 23


State 9

   24 command: FORWARD . SEMICOLON
   25        | FORWARD . expr SEMICOLON

    PLUS       shift, and go to state 24
    MINUS      shift, and go to state 25
    OPENPR     shift, and go to state 26
    INTEGER    shift, and go to state 27
    DOUBLE     shift, and go to state 28
    ID         shift, and go to state 29
    SEMICOLON  shift, and go to state 30

    expr    go to state 31
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 10

   31 command: TURN . LEFT SEMICOLON
   32        | TURN . RIGHT SEMICOLON
   33        | TURN . LEFT expr SEMICOLON
   34        | TURN . RIGHT expr SEMICOLON

    RIGHT  shift, and go to state 35
    LEFT   shift, and go to state 36


State 11

   26 command: COLOR . col SEMICOLON
   30        | COLOR . RGB OPENPR expr $@8 COMMA expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON

    RED    shift, and go to state 37
    GREEN  shift, and go to state 38
    BLUE   shift, and go to state 39
    BLACK  shift, and go to state 40
    RGB    shift, and go to state 41

    col  go to state 42


State 12

   11 ifhead: IF . bool THEN

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 43
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29
    NOT      shift, and go to state 44

    bool    go to state 45
    frel    go to state 46
    rel     go to state 47
    expr    go to state 48
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 13

   18 command: WHILE . $@3 bool $@4 DO command

    $default  reduce using rule 16 ($@3)

    $@3  go to state 49


State 14

   21 command: FOR . varassign $@5 bool SEMICOLON $@6 varassign DO command

    ID  shift, and go to state 15

    varassign  go to state 50


State 15

    9 varassign: ID . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 51


State 16

   37 command: SIZE . expr SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 52
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 17

   23 command: START . $@7 declist commandList END

    $default  reduce using rule 22 ($@7)

    $@7  go to state 53


State 18

    1 program: header declist commandList trailer .

    $default  reduce using rule 1 (program)


State 19

   10 command: varassign .

    $default  reduce using rule 10 (command)


State 20

    8 commandList: commandList command .

    $default  reduce using rule 8 (commandList)


State 21

   14 command: ifhead . command ELSE $@1 $@2 command
   15        | ifhead . command

    FORWARD  shift, and go to state 9
    TURN     shift, and go to state 10
    COLOR    shift, and go to state 11
    IF       shift, and go to state 12
    WHILE    shift, and go to state 13
    FOR      shift, and go to state 14
    ID       shift, and go to state 15
    SIZE     shift, and go to state 16
    START    shift, and go to state 17

    $default  reduce using rule 35 ($@11)

    varassign  go to state 19
    command    go to state 54
    ifhead     go to state 21
    $@11       go to state 22


State 22

   36 command: $@11 . CURVE expr COMMA expr COMMA expr SEMICOLON

    CURVE  shift, and go to state 55


State 23

    6 dec: VAR ID SEMICOLON .

    $default  reduce using rule 6 (dec)


State 24

   57 factor: PLUS . atomic

    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    atomic  go to state 56


State 25

   58 factor: MINUS . atomic

    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    atomic  go to state 57


State 26

   62 atomic: OPENPR . expr CLOSEDPR

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 58
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 27

   60 atomic: INTEGER .

    $default  reduce using rule 60 (atomic)


State 28

   61 atomic: DOUBLE .

    $default  reduce using rule 61 (atomic)


State 29

   59 atomic: ID .

    $default  reduce using rule 59 (atomic)


State 30

   24 command: FORWARD SEMICOLON .

    $default  reduce using rule 24 (command)


State 31

   25 command: FORWARD expr . SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 61


State 32

   50 expr: prod .
   54 prod: prod . STAR factor
   55     | prod . SLASH factor

    STAR   shift, and go to state 62
    SLASH  shift, and go to state 63

    $default  reduce using rule 50 (expr)


State 33

   53 prod: factor .

    $default  reduce using rule 53 (prod)


State 34

   56 factor: atomic .

    $default  reduce using rule 56 (factor)


State 35

   32 command: TURN RIGHT . SEMICOLON
   34        | TURN RIGHT . expr SEMICOLON

    PLUS       shift, and go to state 24
    MINUS      shift, and go to state 25
    OPENPR     shift, and go to state 26
    INTEGER    shift, and go to state 27
    DOUBLE     shift, and go to state 28
    ID         shift, and go to state 29
    SEMICOLON  shift, and go to state 64

    expr    go to state 65
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 36

   31 command: TURN LEFT . SEMICOLON
   33        | TURN LEFT . expr SEMICOLON

    PLUS       shift, and go to state 24
    MINUS      shift, and go to state 25
    OPENPR     shift, and go to state 26
    INTEGER    shift, and go to state 27
    DOUBLE     shift, and go to state 28
    ID         shift, and go to state 29
    SEMICOLON  shift, and go to state 66

    expr    go to state 67
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 37

   63 col: RED .

    $default  reduce using rule 63 (col)


State 38

   64 col: GREEN .

    $default  reduce using rule 64 (col)


State 39

   65 col: BLUE .

    $default  reduce using rule 65 (col)


State 40

   66 col: BLACK .

    $default  reduce using rule 66 (col)


State 41

   30 command: COLOR RGB . OPENPR expr $@8 COMMA expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON

    OPENPR  shift, and go to state 68


State 42

   26 command: COLOR col . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 43

   49 rel: OPENPR . rel CLOSEDPR
   62 atomic: OPENPR . expr CLOSEDPR

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 43
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    rel     go to state 70
    expr    go to state 71
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 44

   41 frel: NOT . rel

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 43
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    rel     go to state 72
    expr    go to state 48
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 45

   11 ifhead: IF bool . THEN
   38 bool: bool . OR frel
   39     | bool . AND frel

    THEN  shift, and go to state 73
    AND   shift, and go to state 74
    OR    shift, and go to state 75


State 46

   40 bool: frel .

    $default  reduce using rule 40 (bool)


State 47

   42 frel: rel .

    $default  reduce using rule 42 (frel)


State 48

   43 rel: expr . LESS expr
   44    | expr . GREATER expr
   45    | expr . LESS ASSIGN expr
   46    | expr . GREATER ASSIGN expr
   47    | expr . NOT ASSIGN expr
   48    | expr . ASSIGN ASSIGN expr
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS     shift, and go to state 59
    MINUS    shift, and go to state 60
    ASSIGN   shift, and go to state 76
    LESS     shift, and go to state 77
    GREATER  shift, and go to state 78
    NOT      shift, and go to state 79


State 49

   18 command: WHILE $@3 . bool $@4 DO command

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 43
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29
    NOT      shift, and go to state 44

    bool    go to state 80
    frel    go to state 46
    rel     go to state 47
    expr    go to state 48
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 50

   21 command: FOR varassign . $@5 bool SEMICOLON $@6 varassign DO command

    $default  reduce using rule 19 ($@5)

    $@5  go to state 81


State 51

    9 varassign: ID ASSIGN . expr SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 82
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 52

   37 command: SIZE expr . SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 83


State 53

   23 command: START $@7 . declist commandList END

    $default  reduce using rule 4 (declist)

    declist  go to state 84


State 54

   14 command: ifhead command . ELSE $@1 $@2 command
   15        | ifhead command .

    ELSE  shift, and go to state 85

    ELSE      [reduce using rule 15 (command)]
    $default  reduce using rule 15 (command)


State 55

   36 command: $@11 CURVE . expr COMMA expr COMMA expr SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 86
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 56

   57 factor: PLUS atomic .

    $default  reduce using rule 57 (factor)


State 57

   58 factor: MINUS atomic .

    $default  reduce using rule 58 (factor)


State 58

   51 expr: expr . PLUS prod
   52     | expr . MINUS prod
   62 atomic: OPENPR expr . CLOSEDPR

    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    CLOSEDPR  shift, and go to state 87


State 59

   51 expr: expr PLUS . prod

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    prod    go to state 88
    factor  go to state 33
    atomic  go to state 34


State 60

   52 expr: expr MINUS . prod

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    prod    go to state 89
    factor  go to state 33
    atomic  go to state 34


State 61

   25 command: FORWARD expr SEMICOLON .

    $default  reduce using rule 25 (command)


State 62

   54 prod: prod STAR . factor

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    factor  go to state 90
    atomic  go to state 34


State 63

   55 prod: prod SLASH . factor

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    factor  go to state 91
    atomic  go to state 34


State 64

   32 command: TURN RIGHT SEMICOLON .

    $default  reduce using rule 32 (command)


State 65

   34 command: TURN RIGHT expr . SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 92


State 66

   31 command: TURN LEFT SEMICOLON .

    $default  reduce using rule 31 (command)


State 67

   33 command: TURN LEFT expr . SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 93


State 68

   30 command: COLOR RGB OPENPR . expr $@8 COMMA expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 94
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 69

   26 command: COLOR col SEMICOLON .

    $default  reduce using rule 26 (command)


State 70

   49 rel: OPENPR rel . CLOSEDPR

    CLOSEDPR  shift, and go to state 95


State 71

   43 rel: expr . LESS expr
   44    | expr . GREATER expr
   45    | expr . LESS ASSIGN expr
   46    | expr . GREATER ASSIGN expr
   47    | expr . NOT ASSIGN expr
   48    | expr . ASSIGN ASSIGN expr
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod
   62 atomic: OPENPR expr . CLOSEDPR

    PLUS      shift, and go to state 59
    MINUS     shift, and go to state 60
    CLOSEDPR  shift, and go to state 87
    ASSIGN    shift, and go to state 76
    LESS      shift, and go to state 77
    GREATER   shift, and go to state 78
    NOT       shift, and go to state 79


State 72

   41 frel: NOT rel .

    $default  reduce using rule 41 (frel)


State 73

   11 ifhead: IF bool THEN .

    $default  reduce using rule 11 (ifhead)


State 74

   39 bool: bool AND . frel

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 43
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29
    NOT      shift, and go to state 44

    frel    go to state 96
    rel     go to state 47
    expr    go to state 48
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 75

   38 bool: bool OR . frel

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 43
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29
    NOT      shift, and go to state 44

    frel    go to state 97
    rel     go to state 47
    expr    go to state 48
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 76

   48 rel: expr ASSIGN . ASSIGN expr

    ASSIGN  shift, and go to state 98


State 77

   43 rel: expr LESS . expr
   45    | expr LESS . ASSIGN expr

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29
    ASSIGN   shift, and go to state 99

    expr    go to state 100
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 78

   44 rel: expr GREATER . expr
   46    | expr GREATER . ASSIGN expr

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29
    ASSIGN   shift, and go to state 101

    expr    go to state 102
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 79

   47 rel: expr NOT . ASSIGN expr

    ASSIGN  shift, and go to state 103


State 80

   18 command: WHILE $@3 bool . $@4 DO command
   38 bool: bool . OR frel
   39     | bool . AND frel

    AND  shift, and go to state 74
    OR   shift, and go to state 75

    $default  reduce using rule 17 ($@4)

    $@4  go to state 104


State 81

   21 command: FOR varassign $@5 . bool SEMICOLON $@6 varassign DO command

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 43
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29
    NOT      shift, and go to state 44

    bool    go to state 105
    frel    go to state 46
    rel     go to state 47
    expr    go to state 48
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 82

    9 varassign: ID ASSIGN expr . SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 106


State 83

   37 command: SIZE expr SEMICOLON .

    $default  reduce using rule 37 (command)


State 84

    5 declist: declist . dec
   23 command: START $@7 declist . commandList END

    VAR  shift, and go to state 5

    $default  reduce using rule 7 (commandList)

    dec          go to state 6
    commandList  go to state 107


State 85

   14 command: ifhead command ELSE . $@1 $@2 command

    $default  reduce using rule 12 ($@1)

    $@1  go to state 108


State 86

   36 command: $@11 CURVE expr . COMMA expr COMMA expr SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60
    COMMA  shift, and go to state 109


State 87

   62 atomic: OPENPR expr CLOSEDPR .

    $default  reduce using rule 62 (atomic)


State 88

   51 expr: expr PLUS prod .
   54 prod: prod . STAR factor
   55     | prod . SLASH factor

    STAR   shift, and go to state 62
    SLASH  shift, and go to state 63

    $default  reduce using rule 51 (expr)


State 89

   52 expr: expr MINUS prod .
   54 prod: prod . STAR factor
   55     | prod . SLASH factor

    STAR   shift, and go to state 62
    SLASH  shift, and go to state 63

    $default  reduce using rule 52 (expr)


State 90

   54 prod: prod STAR factor .

    $default  reduce using rule 54 (prod)


State 91

   55 prod: prod SLASH factor .

    $default  reduce using rule 55 (prod)


State 92

   34 command: TURN RIGHT expr SEMICOLON .

    $default  reduce using rule 34 (command)


State 93

   33 command: TURN LEFT expr SEMICOLON .

    $default  reduce using rule 33 (command)


State 94

   30 command: COLOR RGB OPENPR expr . $@8 COMMA expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 27 ($@8)

    $@8  go to state 110


State 95

   49 rel: OPENPR rel CLOSEDPR .

    $default  reduce using rule 49 (rel)


State 96

   39 bool: bool AND frel .

    $default  reduce using rule 39 (bool)


State 97

   38 bool: bool OR frel .

    $default  reduce using rule 38 (bool)


State 98

   48 rel: expr ASSIGN ASSIGN . expr

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 111
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 99

   45 rel: expr LESS ASSIGN . expr

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 112
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 100

   43 rel: expr LESS expr .
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 43 (rel)


State 101

   46 rel: expr GREATER ASSIGN . expr

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 113
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 102

   44 rel: expr GREATER expr .
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 44 (rel)


State 103

   47 rel: expr NOT ASSIGN . expr

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 114
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 104

   18 command: WHILE $@3 bool $@4 . DO command

    DO  shift, and go to state 115


State 105

   21 command: FOR varassign $@5 bool . SEMICOLON $@6 varassign DO command
   38 bool: bool . OR frel
   39     | bool . AND frel

    AND        shift, and go to state 74
    OR         shift, and go to state 75
    SEMICOLON  shift, and go to state 116


State 106

    9 varassign: ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 9 (varassign)


State 107

    8 commandList: commandList . command
   23 command: START $@7 declist commandList . END

    FORWARD  shift, and go to state 9
    TURN     shift, and go to state 10
    COLOR    shift, and go to state 11
    IF       shift, and go to state 12
    WHILE    shift, and go to state 13
    FOR      shift, and go to state 14
    ID       shift, and go to state 15
    SIZE     shift, and go to state 16
    START    shift, and go to state 17
    END      shift, and go to state 117

    $default  reduce using rule 35 ($@11)

    varassign  go to state 19
    command    go to state 20
    ifhead     go to state 21
    $@11       go to state 22


State 108

   14 command: ifhead command ELSE $@1 . $@2 command

    $default  reduce using rule 13 ($@2)

    $@2  go to state 118


State 109

   36 command: $@11 CURVE expr COMMA . expr COMMA expr SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 119
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 110

   30 command: COLOR RGB OPENPR expr $@8 . COMMA expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON

    COMMA  shift, and go to state 120


State 111

   48 rel: expr ASSIGN ASSIGN expr .
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 48 (rel)


State 112

   45 rel: expr LESS ASSIGN expr .
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 45 (rel)


State 113

   46 rel: expr GREATER ASSIGN expr .
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 46 (rel)


State 114

   47 rel: expr NOT ASSIGN expr .
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 47 (rel)


State 115

   18 command: WHILE $@3 bool $@4 DO . command

    FORWARD  shift, and go to state 9
    TURN     shift, and go to state 10
    COLOR    shift, and go to state 11
    IF       shift, and go to state 12
    WHILE    shift, and go to state 13
    FOR      shift, and go to state 14
    ID       shift, and go to state 15
    SIZE     shift, and go to state 16
    START    shift, and go to state 17

    $default  reduce using rule 35 ($@11)

    varassign  go to state 19
    command    go to state 121
    ifhead     go to state 21
    $@11       go to state 22


State 116

   21 command: FOR varassign $@5 bool SEMICOLON . $@6 varassign DO command

    $default  reduce using rule 20 ($@6)

    $@6  go to state 122


State 117

   23 command: START $@7 declist commandList END .

    $default  reduce using rule 23 (command)


State 118

   14 command: ifhead command ELSE $@1 $@2 . command

    FORWARD  shift, and go to state 9
    TURN     shift, and go to state 10
    COLOR    shift, and go to state 11
    IF       shift, and go to state 12
    WHILE    shift, and go to state 13
    FOR      shift, and go to state 14
    ID       shift, and go to state 15
    SIZE     shift, and go to state 16
    START    shift, and go to state 17

    $default  reduce using rule 35 ($@11)

    varassign  go to state 19
    command    go to state 123
    ifhead     go to state 21
    $@11       go to state 22


State 119

   36 command: $@11 CURVE expr COMMA expr . COMMA expr SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60
    COMMA  shift, and go to state 124


State 120

   30 command: COLOR RGB OPENPR expr $@8 COMMA . expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 125
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 121

   18 command: WHILE $@3 bool $@4 DO command .

    $default  reduce using rule 18 (command)


State 122

   21 command: FOR varassign $@5 bool SEMICOLON $@6 . varassign DO command

    ID  shift, and go to state 15

    varassign  go to state 126


State 123

   14 command: ifhead command ELSE $@1 $@2 command .

    $default  reduce using rule 14 (command)


State 124

   36 command: $@11 CURVE expr COMMA expr COMMA . expr SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 127
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 125

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr . $@9 COMMA expr $@10 CLOSEDPR SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 28 ($@9)

    $@9  go to state 128


State 126

   21 command: FOR varassign $@5 bool SEMICOLON $@6 varassign . DO command

    DO  shift, and go to state 129


State 127

   36 command: $@11 CURVE expr COMMA expr COMMA expr . SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS       shift, and go to state 59
    MINUS      shift, and go to state 60
    SEMICOLON  shift, and go to state 130


State 128

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr $@9 . COMMA expr $@10 CLOSEDPR SEMICOLON

    COMMA  shift, and go to state 131


State 129

   21 command: FOR varassign $@5 bool SEMICOLON $@6 varassign DO . command

    FORWARD  shift, and go to state 9
    TURN     shift, and go to state 10
    COLOR    shift, and go to state 11
    IF       shift, and go to state 12
    WHILE    shift, and go to state 13
    FOR      shift, and go to state 14
    ID       shift, and go to state 15
    SIZE     shift, and go to state 16
    START    shift, and go to state 17

    $default  reduce using rule 35 ($@11)

    varassign  go to state 19
    command    go to state 132
    ifhead     go to state 21
    $@11       go to state 22


State 130

   36 command: $@11 CURVE expr COMMA expr COMMA expr SEMICOLON .

    $default  reduce using rule 36 (command)


State 131

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr $@9 COMMA . expr $@10 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 24
    MINUS    shift, and go to state 25
    OPENPR   shift, and go to state 26
    INTEGER  shift, and go to state 27
    DOUBLE   shift, and go to state 28
    ID       shift, and go to state 29

    expr    go to state 133
    prod    go to state 32
    factor  go to state 33
    atomic  go to state 34


State 132

   21 command: FOR varassign $@5 bool SEMICOLON $@6 varassign DO command .

    $default  reduce using rule 21 (command)


State 133

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr $@9 COMMA expr . $@10 CLOSEDPR SEMICOLON
   51 expr: expr . PLUS prod
   52     | expr . MINUS prod

    PLUS   shift, and go to state 59
    MINUS  shift, and go to state 60

    $default  reduce using rule 29 ($@10)

    $@10  go to state 134


State 134

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr $@9 COMMA expr $@10 . CLOSEDPR SEMICOLON

    CLOSEDPR  shift, and go to state 135


State 135

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr $@9 COMMA expr $@10 CLOSEDPR . SEMICOLON

    SEMICOLON  shift, and go to state 136


State 136

   30 command: COLOR RGB OPENPR expr $@8 COMMA expr $@9 COMMA expr $@10 CLOSEDPR SEMICOLON .

    $default  reduce using rule 30 (command)
