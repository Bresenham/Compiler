Terminals unused in grammar

   WHILST


State 59 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: header declist commandList trailer

    2 header: %empty

    3 trailer: %empty

    4 declist: %empty
    5        | declist dec

    6 dec: VAR ID SEMICOLON

    7 $@1: %empty

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist commandList END

    9 paramlist: %empty
   10          | params

   11 params: ID
   12       | ID COMMA params

   13 commandList: %empty
   14            | commandList command

   15 varassign: ID ASSIGN expr SEMICOLON

   16 command: varassign

   17 ifhead: IF bool THEN

   18 $@2: %empty

   19 $@3: %empty

   20 command: ifhead command ELSE $@2 $@3 command
   21        | ifhead command

   22 $@4: %empty

   23 $@5: %empty

   24 command: WHILE $@4 bool $@5 DO command

   25 $@6: %empty

   26 $@7: %empty

   27 command: FOR varassign $@6 bool SEMICOLON $@7 varassign DO command

   28 $@8: %empty

   29 command: START $@8 declist commandList END
   30        | ID OPENPR arglist CLOSEDPR SEMICOLON

   31 arglist: %empty
   32        | args

   33 args: expr
   34     | args COMMA expr

   35 command: FORWARD SEMICOLON
   36        | FORWARD expr SEMICOLON
   37        | COLOR col SEMICOLON

   38 $@9: %empty

   39 $@10: %empty

   40 $@11: %empty

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON
   42        | TURN LEFT SEMICOLON
   43        | TURN RIGHT SEMICOLON
   44        | TURN LEFT expr SEMICOLON
   45        | TURN RIGHT expr SEMICOLON

   46 $@12: %empty

   47 command: $@12 CURVE expr COMMA expr COMMA expr SEMICOLON
   48        | SIZE expr SEMICOLON

   49 bool: bool OR frel
   50     | bool AND frel
   51     | frel

   52 frel: NOT rel
   53     | rel

   54 rel: expr LESS expr
   55    | expr GREATER expr
   56    | expr LESS ASSIGN expr
   57    | expr GREATER ASSIGN expr
   58    | expr NOT ASSIGN expr
   59    | expr ASSIGN ASSIGN expr
   60    | OPENPR rel CLOSEDPR

   61 expr: prod
   62     | expr MOD prod
   63     | expr PLUS prod
   64     | expr MINUS prod

   65 prod: factor
   66     | prod STAR factor
   67     | prod SLASH factor

   68 factor: atomic
   69       | PLUS atomic
   70       | MINUS atomic

   71 atomic: ID
   72       | INTEGER
   73       | DOUBLE
   74       | OPENPR expr CLOSEDPR

   75 col: RED
   76    | GREEN
   77    | BLUE
   78    | BLACK


Terminals, with rules where they appear

$end (0) 0
error (256)
FORWARD (258) 35 36
TURN (259) 42 43 44 45
RIGHT (260) 43 45
LEFT (261) 42 44
COLOR (262) 37 41
RED (263) 75
GREEN (264) 76
BLUE (265) 77
BLACK (266) 78
RGB (267) 41
VAR (268) 6
PLUS (269) 63 69
MINUS (270) 64 70
STAR (271) 66
SLASH (272) 67
OPENPR (273) 8 30 41 60 74
CLOSEDPR (274) 8 30 41 60 74
IF (275) 17
THEN (276) 17
AND (277) 50
OR (278) 49
ELSE (279) 20
WHILE (280) 24
DO (281) 24 27
FOR (282) 27
WHILST (283)
INTEGER (284) 72
DOUBLE (285) 73
ID (286) 6 8 11 12 15 30 71
CURVE (287) 47
SIZE (288) 48
COMMA (289) 12 34 41 47
SEMICOLON (290) 6 15 27 30 35 36 37 41 42 43 44 45 47 48
ASSIGN (291) 15 56 57 58 59
PROCEDURE (292) 8
LESS (293) 54 56
GREATER (294) 55 57
NOT (295) 52 58
START (296) 8 29
END (297) 8 29
MOD (298) 62


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1, on right: 0
header (46)
    on left: 2, on right: 1
trailer (47)
    on left: 3, on right: 1
declist (48)
    on left: 4 5, on right: 1 5 8 29
dec (49)
    on left: 6 8, on right: 5
$@1 (50)
    on left: 7, on right: 8
paramlist (51)
    on left: 9 10, on right: 8
params (52)
    on left: 11 12, on right: 10 12
commandList (53)
    on left: 13 14, on right: 1 8 14 29
varassign (54)
    on left: 15, on right: 16 27
command (55)
    on left: 16 20 21 24 27 29 30 35 36 37 41 42 43 44 45 47 48, on right:
    14 20 21 24 27
ifhead (56)
    on left: 17, on right: 20 21
$@2 (57)
    on left: 18, on right: 20
$@3 (58)
    on left: 19, on right: 20
$@4 (59)
    on left: 22, on right: 24
$@5 (60)
    on left: 23, on right: 24
$@6 (61)
    on left: 25, on right: 27
$@7 (62)
    on left: 26, on right: 27
$@8 (63)
    on left: 28, on right: 29
arglist (64)
    on left: 31 32, on right: 30
args (65)
    on left: 33 34, on right: 32 34
$@9 (66)
    on left: 38, on right: 41
$@10 (67)
    on left: 39, on right: 41
$@11 (68)
    on left: 40, on right: 41
$@12 (69)
    on left: 46, on right: 47
bool (70)
    on left: 49 50 51, on right: 17 24 27 49 50
frel (71)
    on left: 52 53, on right: 49 50 51
rel (72)
    on left: 54 55 56 57 58 59 60, on right: 52 53 60
expr (73)
    on left: 61 62 63 64, on right: 15 33 34 36 41 44 45 47 48 54 55
    56 57 58 59 62 63 64 74
prod (74)
    on left: 65 66 67, on right: 61 62 63 64 66 67
factor (75)
    on left: 68 69 70, on right: 65 66 67
atomic (76)
    on left: 71 72 73 74, on right: 68 69 70
col (77)
    on left: 75 76 77 78, on right: 37


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (header)

    program  go to state 1
    header   go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: header . declist commandList trailer

    $default  reduce using rule 4 (declist)

    declist  go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    1 program: header declist . commandList trailer
    5 declist: declist . dec

    VAR        shift, and go to state 5
    PROCEDURE  shift, and go to state 6

    $default  reduce using rule 13 (commandList)

    dec          go to state 7
    commandList  go to state 8


State 5

    6 dec: VAR . ID SEMICOLON

    ID  shift, and go to state 9


State 6

    8 dec: PROCEDURE . ID $@1 OPENPR paramlist CLOSEDPR START declist commandList END

    ID  shift, and go to state 10


State 7

    5 declist: declist dec .

    $default  reduce using rule 5 (declist)


State 8

    1 program: header declist commandList . trailer
   14 commandList: commandList . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    CURVE     reduce using rule 46 ($@12)
    $default  reduce using rule 3 (trailer)

    trailer    go to state 20
    varassign  go to state 21
    command    go to state 22
    ifhead     go to state 23
    $@12       go to state 24


State 9

    6 dec: VAR ID . SEMICOLON

    SEMICOLON  shift, and go to state 25


State 10

    8 dec: PROCEDURE ID . $@1 OPENPR paramlist CLOSEDPR START declist commandList END

    $default  reduce using rule 7 ($@1)

    $@1  go to state 26


State 11

   35 command: FORWARD . SEMICOLON
   36        | FORWARD . expr SEMICOLON

    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    OPENPR     shift, and go to state 29
    INTEGER    shift, and go to state 30
    DOUBLE     shift, and go to state 31
    ID         shift, and go to state 32
    SEMICOLON  shift, and go to state 33

    expr    go to state 34
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 12

   42 command: TURN . LEFT SEMICOLON
   43        | TURN . RIGHT SEMICOLON
   44        | TURN . LEFT expr SEMICOLON
   45        | TURN . RIGHT expr SEMICOLON

    RIGHT  shift, and go to state 38
    LEFT   shift, and go to state 39


State 13

   37 command: COLOR . col SEMICOLON
   41        | COLOR . RGB OPENPR expr $@9 COMMA expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON

    RED    shift, and go to state 40
    GREEN  shift, and go to state 41
    BLUE   shift, and go to state 42
    BLACK  shift, and go to state 43
    RGB    shift, and go to state 44

    col  go to state 45


State 14

   17 ifhead: IF . bool THEN

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 46
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32
    NOT      shift, and go to state 47

    bool    go to state 48
    frel    go to state 49
    rel     go to state 50
    expr    go to state 51
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 15

   24 command: WHILE . $@4 bool $@5 DO command

    $default  reduce using rule 22 ($@4)

    $@4  go to state 52


State 16

   27 command: FOR . varassign $@6 bool SEMICOLON $@7 varassign DO command

    ID  shift, and go to state 53

    varassign  go to state 54


State 17

   15 varassign: ID . ASSIGN expr SEMICOLON
   30 command: ID . OPENPR arglist CLOSEDPR SEMICOLON

    OPENPR  shift, and go to state 55
    ASSIGN  shift, and go to state 56


State 18

   48 command: SIZE . expr SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 57
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 19

   29 command: START . $@8 declist commandList END

    $default  reduce using rule 28 ($@8)

    $@8  go to state 58


State 20

    1 program: header declist commandList trailer .

    $default  reduce using rule 1 (program)


State 21

   16 command: varassign .

    $default  reduce using rule 16 (command)


State 22

   14 commandList: commandList command .

    $default  reduce using rule 14 (commandList)


State 23

   20 command: ifhead . command ELSE $@2 $@3 command
   21        | ifhead . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 46 ($@12)

    varassign  go to state 21
    command    go to state 59
    ifhead     go to state 23
    $@12       go to state 24


State 24

   47 command: $@12 . CURVE expr COMMA expr COMMA expr SEMICOLON

    CURVE  shift, and go to state 60


State 25

    6 dec: VAR ID SEMICOLON .

    $default  reduce using rule 6 (dec)


State 26

    8 dec: PROCEDURE ID $@1 . OPENPR paramlist CLOSEDPR START declist commandList END

    OPENPR  shift, and go to state 61


State 27

   69 factor: PLUS . atomic

    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    atomic  go to state 62


State 28

   70 factor: MINUS . atomic

    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    atomic  go to state 63


State 29

   74 atomic: OPENPR . expr CLOSEDPR

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 64
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 30

   72 atomic: INTEGER .

    $default  reduce using rule 72 (atomic)


State 31

   73 atomic: DOUBLE .

    $default  reduce using rule 73 (atomic)


State 32

   71 atomic: ID .

    $default  reduce using rule 71 (atomic)


State 33

   35 command: FORWARD SEMICOLON .

    $default  reduce using rule 35 (command)


State 34

   36 command: FORWARD expr . SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    SEMICOLON  shift, and go to state 67
    MOD        shift, and go to state 68


State 35

   61 expr: prod .
   66 prod: prod . STAR factor
   67     | prod . SLASH factor

    STAR   shift, and go to state 69
    SLASH  shift, and go to state 70

    $default  reduce using rule 61 (expr)


State 36

   65 prod: factor .

    $default  reduce using rule 65 (prod)


State 37

   68 factor: atomic .

    $default  reduce using rule 68 (factor)


State 38

   43 command: TURN RIGHT . SEMICOLON
   45        | TURN RIGHT . expr SEMICOLON

    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    OPENPR     shift, and go to state 29
    INTEGER    shift, and go to state 30
    DOUBLE     shift, and go to state 31
    ID         shift, and go to state 32
    SEMICOLON  shift, and go to state 71

    expr    go to state 72
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 39

   42 command: TURN LEFT . SEMICOLON
   44        | TURN LEFT . expr SEMICOLON

    PLUS       shift, and go to state 27
    MINUS      shift, and go to state 28
    OPENPR     shift, and go to state 29
    INTEGER    shift, and go to state 30
    DOUBLE     shift, and go to state 31
    ID         shift, and go to state 32
    SEMICOLON  shift, and go to state 73

    expr    go to state 74
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 40

   75 col: RED .

    $default  reduce using rule 75 (col)


State 41

   76 col: GREEN .

    $default  reduce using rule 76 (col)


State 42

   77 col: BLUE .

    $default  reduce using rule 77 (col)


State 43

   78 col: BLACK .

    $default  reduce using rule 78 (col)


State 44

   41 command: COLOR RGB . OPENPR expr $@9 COMMA expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON

    OPENPR  shift, and go to state 75


State 45

   37 command: COLOR col . SEMICOLON

    SEMICOLON  shift, and go to state 76


State 46

   60 rel: OPENPR . rel CLOSEDPR
   74 atomic: OPENPR . expr CLOSEDPR

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 46
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    rel     go to state 77
    expr    go to state 78
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 47

   52 frel: NOT . rel

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 46
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    rel     go to state 79
    expr    go to state 51
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 48

   17 ifhead: IF bool . THEN
   49 bool: bool . OR frel
   50     | bool . AND frel

    THEN  shift, and go to state 80
    AND   shift, and go to state 81
    OR    shift, and go to state 82


State 49

   51 bool: frel .

    $default  reduce using rule 51 (bool)


State 50

   53 frel: rel .

    $default  reduce using rule 53 (frel)


State 51

   54 rel: expr . LESS expr
   55    | expr . GREATER expr
   56    | expr . LESS ASSIGN expr
   57    | expr . GREATER ASSIGN expr
   58    | expr . NOT ASSIGN expr
   59    | expr . ASSIGN ASSIGN expr
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS     shift, and go to state 65
    MINUS    shift, and go to state 66
    ASSIGN   shift, and go to state 83
    LESS     shift, and go to state 84
    GREATER  shift, and go to state 85
    NOT      shift, and go to state 86
    MOD      shift, and go to state 68


State 52

   24 command: WHILE $@4 . bool $@5 DO command

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 46
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32
    NOT      shift, and go to state 47

    bool    go to state 87
    frel    go to state 49
    rel     go to state 50
    expr    go to state 51
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 53

   15 varassign: ID . ASSIGN expr SEMICOLON

    ASSIGN  shift, and go to state 56


State 54

   27 command: FOR varassign . $@6 bool SEMICOLON $@7 varassign DO command

    $default  reduce using rule 25 ($@6)

    $@6  go to state 88


State 55

   30 command: ID OPENPR . arglist CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    $default  reduce using rule 31 (arglist)

    arglist  go to state 89
    args     go to state 90
    expr     go to state 91
    prod     go to state 35
    factor   go to state 36
    atomic   go to state 37


State 56

   15 varassign: ID ASSIGN . expr SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 92
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 57

   48 command: SIZE expr . SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    SEMICOLON  shift, and go to state 93
    MOD        shift, and go to state 68


State 58

   29 command: START $@8 . declist commandList END

    $default  reduce using rule 4 (declist)

    declist  go to state 94


State 59

   20 command: ifhead command . ELSE $@2 $@3 command
   21        | ifhead command .

    ELSE  shift, and go to state 95

    ELSE      [reduce using rule 21 (command)]
    $default  reduce using rule 21 (command)


State 60

   47 command: $@12 CURVE . expr COMMA expr COMMA expr SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 96
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 61

    8 dec: PROCEDURE ID $@1 OPENPR . paramlist CLOSEDPR START declist commandList END

    ID  shift, and go to state 97

    $default  reduce using rule 9 (paramlist)

    paramlist  go to state 98
    params     go to state 99


State 62

   69 factor: PLUS atomic .

    $default  reduce using rule 69 (factor)


State 63

   70 factor: MINUS atomic .

    $default  reduce using rule 70 (factor)


State 64

   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod
   74 atomic: OPENPR expr . CLOSEDPR

    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    CLOSEDPR  shift, and go to state 100
    MOD       shift, and go to state 68


State 65

   63 expr: expr PLUS . prod

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    prod    go to state 101
    factor  go to state 36
    atomic  go to state 37


State 66

   64 expr: expr MINUS . prod

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    prod    go to state 102
    factor  go to state 36
    atomic  go to state 37


State 67

   36 command: FORWARD expr SEMICOLON .

    $default  reduce using rule 36 (command)


State 68

   62 expr: expr MOD . prod

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    prod    go to state 103
    factor  go to state 36
    atomic  go to state 37


State 69

   66 prod: prod STAR . factor

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    factor  go to state 104
    atomic  go to state 37


State 70

   67 prod: prod SLASH . factor

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    factor  go to state 105
    atomic  go to state 37


State 71

   43 command: TURN RIGHT SEMICOLON .

    $default  reduce using rule 43 (command)


State 72

   45 command: TURN RIGHT expr . SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    SEMICOLON  shift, and go to state 106
    MOD        shift, and go to state 68


State 73

   42 command: TURN LEFT SEMICOLON .

    $default  reduce using rule 42 (command)


State 74

   44 command: TURN LEFT expr . SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    SEMICOLON  shift, and go to state 107
    MOD        shift, and go to state 68


State 75

   41 command: COLOR RGB OPENPR . expr $@9 COMMA expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 108
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 76

   37 command: COLOR col SEMICOLON .

    $default  reduce using rule 37 (command)


State 77

   60 rel: OPENPR rel . CLOSEDPR

    CLOSEDPR  shift, and go to state 109


State 78

   54 rel: expr . LESS expr
   55    | expr . GREATER expr
   56    | expr . LESS ASSIGN expr
   57    | expr . GREATER ASSIGN expr
   58    | expr . NOT ASSIGN expr
   59    | expr . ASSIGN ASSIGN expr
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod
   74 atomic: OPENPR expr . CLOSEDPR

    PLUS      shift, and go to state 65
    MINUS     shift, and go to state 66
    CLOSEDPR  shift, and go to state 100
    ASSIGN    shift, and go to state 83
    LESS      shift, and go to state 84
    GREATER   shift, and go to state 85
    NOT       shift, and go to state 86
    MOD       shift, and go to state 68


State 79

   52 frel: NOT rel .

    $default  reduce using rule 52 (frel)


State 80

   17 ifhead: IF bool THEN .

    $default  reduce using rule 17 (ifhead)


State 81

   50 bool: bool AND . frel

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 46
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32
    NOT      shift, and go to state 47

    frel    go to state 110
    rel     go to state 50
    expr    go to state 51
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 82

   49 bool: bool OR . frel

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 46
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32
    NOT      shift, and go to state 47

    frel    go to state 111
    rel     go to state 50
    expr    go to state 51
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 83

   59 rel: expr ASSIGN . ASSIGN expr

    ASSIGN  shift, and go to state 112


State 84

   54 rel: expr LESS . expr
   56    | expr LESS . ASSIGN expr

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32
    ASSIGN   shift, and go to state 113

    expr    go to state 114
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 85

   55 rel: expr GREATER . expr
   57    | expr GREATER . ASSIGN expr

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32
    ASSIGN   shift, and go to state 115

    expr    go to state 116
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 86

   58 rel: expr NOT . ASSIGN expr

    ASSIGN  shift, and go to state 117


State 87

   24 command: WHILE $@4 bool . $@5 DO command
   49 bool: bool . OR frel
   50     | bool . AND frel

    AND  shift, and go to state 81
    OR   shift, and go to state 82

    $default  reduce using rule 23 ($@5)

    $@5  go to state 118


State 88

   27 command: FOR varassign $@6 . bool SEMICOLON $@7 varassign DO command

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 46
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32
    NOT      shift, and go to state 47

    bool    go to state 119
    frel    go to state 49
    rel     go to state 50
    expr    go to state 51
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 89

   30 command: ID OPENPR arglist . CLOSEDPR SEMICOLON

    CLOSEDPR  shift, and go to state 120


State 90

   32 arglist: args .
   34 args: args . COMMA expr

    COMMA  shift, and go to state 121

    $default  reduce using rule 32 (arglist)


State 91

   33 args: expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 33 (args)


State 92

   15 varassign: ID ASSIGN expr . SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    SEMICOLON  shift, and go to state 122
    MOD        shift, and go to state 68


State 93

   48 command: SIZE expr SEMICOLON .

    $default  reduce using rule 48 (command)


State 94

    5 declist: declist . dec
   29 command: START $@8 declist . commandList END

    VAR        shift, and go to state 5
    PROCEDURE  shift, and go to state 6

    $default  reduce using rule 13 (commandList)

    dec          go to state 7
    commandList  go to state 123


State 95

   20 command: ifhead command ELSE . $@2 $@3 command

    $default  reduce using rule 18 ($@2)

    $@2  go to state 124


State 96

   47 command: $@12 CURVE expr . COMMA expr COMMA expr SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    COMMA  shift, and go to state 125
    MOD    shift, and go to state 68


State 97

   11 params: ID .
   12       | ID . COMMA params

    COMMA  shift, and go to state 126

    $default  reduce using rule 11 (params)


State 98

    8 dec: PROCEDURE ID $@1 OPENPR paramlist . CLOSEDPR START declist commandList END

    CLOSEDPR  shift, and go to state 127


State 99

   10 paramlist: params .

    $default  reduce using rule 10 (paramlist)


State 100

   74 atomic: OPENPR expr CLOSEDPR .

    $default  reduce using rule 74 (atomic)


State 101

   63 expr: expr PLUS prod .
   66 prod: prod . STAR factor
   67     | prod . SLASH factor

    STAR   shift, and go to state 69
    SLASH  shift, and go to state 70

    $default  reduce using rule 63 (expr)


State 102

   64 expr: expr MINUS prod .
   66 prod: prod . STAR factor
   67     | prod . SLASH factor

    STAR   shift, and go to state 69
    SLASH  shift, and go to state 70

    $default  reduce using rule 64 (expr)


State 103

   62 expr: expr MOD prod .
   66 prod: prod . STAR factor
   67     | prod . SLASH factor

    STAR   shift, and go to state 69
    SLASH  shift, and go to state 70

    $default  reduce using rule 62 (expr)


State 104

   66 prod: prod STAR factor .

    $default  reduce using rule 66 (prod)


State 105

   67 prod: prod SLASH factor .

    $default  reduce using rule 67 (prod)


State 106

   45 command: TURN RIGHT expr SEMICOLON .

    $default  reduce using rule 45 (command)


State 107

   44 command: TURN LEFT expr SEMICOLON .

    $default  reduce using rule 44 (command)


State 108

   41 command: COLOR RGB OPENPR expr . $@9 COMMA expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 38 ($@9)

    $@9  go to state 128


State 109

   60 rel: OPENPR rel CLOSEDPR .

    $default  reduce using rule 60 (rel)


State 110

   50 bool: bool AND frel .

    $default  reduce using rule 50 (bool)


State 111

   49 bool: bool OR frel .

    $default  reduce using rule 49 (bool)


State 112

   59 rel: expr ASSIGN ASSIGN . expr

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 129
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 113

   56 rel: expr LESS ASSIGN . expr

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 130
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 114

   54 rel: expr LESS expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 54 (rel)


State 115

   57 rel: expr GREATER ASSIGN . expr

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 131
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 116

   55 rel: expr GREATER expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 55 (rel)


State 117

   58 rel: expr NOT ASSIGN . expr

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 132
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 118

   24 command: WHILE $@4 bool $@5 . DO command

    DO  shift, and go to state 133


State 119

   27 command: FOR varassign $@6 bool . SEMICOLON $@7 varassign DO command
   49 bool: bool . OR frel
   50     | bool . AND frel

    AND        shift, and go to state 81
    OR         shift, and go to state 82
    SEMICOLON  shift, and go to state 134


State 120

   30 command: ID OPENPR arglist CLOSEDPR . SEMICOLON

    SEMICOLON  shift, and go to state 135


State 121

   34 args: args COMMA . expr

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 136
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 122

   15 varassign: ID ASSIGN expr SEMICOLON .

    $default  reduce using rule 15 (varassign)


State 123

   14 commandList: commandList . command
   29 command: START $@8 declist commandList . END

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19
    END      shift, and go to state 137

    $default  reduce using rule 46 ($@12)

    varassign  go to state 21
    command    go to state 22
    ifhead     go to state 23
    $@12       go to state 24


State 124

   20 command: ifhead command ELSE $@2 . $@3 command

    $default  reduce using rule 19 ($@3)

    $@3  go to state 138


State 125

   47 command: $@12 CURVE expr COMMA . expr COMMA expr SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 139
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 126

   12 params: ID COMMA . params

    ID  shift, and go to state 97

    params  go to state 140


State 127

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR . START declist commandList END

    START  shift, and go to state 141


State 128

   41 command: COLOR RGB OPENPR expr $@9 . COMMA expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON

    COMMA  shift, and go to state 142


State 129

   59 rel: expr ASSIGN ASSIGN expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 59 (rel)


State 130

   56 rel: expr LESS ASSIGN expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 56 (rel)


State 131

   57 rel: expr GREATER ASSIGN expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 57 (rel)


State 132

   58 rel: expr NOT ASSIGN expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 58 (rel)


State 133

   24 command: WHILE $@4 bool $@5 DO . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 46 ($@12)

    varassign  go to state 21
    command    go to state 143
    ifhead     go to state 23
    $@12       go to state 24


State 134

   27 command: FOR varassign $@6 bool SEMICOLON . $@7 varassign DO command

    $default  reduce using rule 26 ($@7)

    $@7  go to state 144


State 135

   30 command: ID OPENPR arglist CLOSEDPR SEMICOLON .

    $default  reduce using rule 30 (command)


State 136

   34 args: args COMMA expr .
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 34 (args)


State 137

   29 command: START $@8 declist commandList END .

    $default  reduce using rule 29 (command)


State 138

   20 command: ifhead command ELSE $@2 $@3 . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 46 ($@12)

    varassign  go to state 21
    command    go to state 145
    ifhead     go to state 23
    $@12       go to state 24


State 139

   47 command: $@12 CURVE expr COMMA expr . COMMA expr SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    COMMA  shift, and go to state 146
    MOD    shift, and go to state 68


State 140

   12 params: ID COMMA params .

    $default  reduce using rule 12 (params)


State 141

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START . declist commandList END

    $default  reduce using rule 4 (declist)

    declist  go to state 147


State 142

   41 command: COLOR RGB OPENPR expr $@9 COMMA . expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 148
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 143

   24 command: WHILE $@4 bool $@5 DO command .

    $default  reduce using rule 24 (command)


State 144

   27 command: FOR varassign $@6 bool SEMICOLON $@7 . varassign DO command

    ID  shift, and go to state 53

    varassign  go to state 149


State 145

   20 command: ifhead command ELSE $@2 $@3 command .

    $default  reduce using rule 20 (command)


State 146

   47 command: $@12 CURVE expr COMMA expr COMMA . expr SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 150
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 147

    5 declist: declist . dec
    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist . commandList END

    VAR        shift, and go to state 5
    PROCEDURE  shift, and go to state 6

    $default  reduce using rule 13 (commandList)

    dec          go to state 7
    commandList  go to state 151


State 148

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr . $@10 COMMA expr $@11 CLOSEDPR SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 39 ($@10)

    $@10  go to state 152


State 149

   27 command: FOR varassign $@6 bool SEMICOLON $@7 varassign . DO command

    DO  shift, and go to state 153


State 150

   47 command: $@12 CURVE expr COMMA expr COMMA expr . SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS       shift, and go to state 65
    MINUS      shift, and go to state 66
    SEMICOLON  shift, and go to state 154
    MOD        shift, and go to state 68


State 151

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist commandList . END
   14 commandList: commandList . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19
    END      shift, and go to state 155

    $default  reduce using rule 46 ($@12)

    varassign  go to state 21
    command    go to state 22
    ifhead     go to state 23
    $@12       go to state 24


State 152

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr $@10 . COMMA expr $@11 CLOSEDPR SEMICOLON

    COMMA  shift, and go to state 156


State 153

   27 command: FOR varassign $@6 bool SEMICOLON $@7 varassign DO . command

    FORWARD  shift, and go to state 11
    TURN     shift, and go to state 12
    COLOR    shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16
    ID       shift, and go to state 17
    SIZE     shift, and go to state 18
    START    shift, and go to state 19

    $default  reduce using rule 46 ($@12)

    varassign  go to state 21
    command    go to state 157
    ifhead     go to state 23
    $@12       go to state 24


State 154

   47 command: $@12 CURVE expr COMMA expr COMMA expr SEMICOLON .

    $default  reduce using rule 47 (command)


State 155

    8 dec: PROCEDURE ID $@1 OPENPR paramlist CLOSEDPR START declist commandList END .

    $default  reduce using rule 8 (dec)


State 156

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr $@10 COMMA . expr $@11 CLOSEDPR SEMICOLON

    PLUS     shift, and go to state 27
    MINUS    shift, and go to state 28
    OPENPR   shift, and go to state 29
    INTEGER  shift, and go to state 30
    DOUBLE   shift, and go to state 31
    ID       shift, and go to state 32

    expr    go to state 158
    prod    go to state 35
    factor  go to state 36
    atomic  go to state 37


State 157

   27 command: FOR varassign $@6 bool SEMICOLON $@7 varassign DO command .

    $default  reduce using rule 27 (command)


State 158

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr $@10 COMMA expr . $@11 CLOSEDPR SEMICOLON
   62 expr: expr . MOD prod
   63     | expr . PLUS prod
   64     | expr . MINUS prod

    PLUS   shift, and go to state 65
    MINUS  shift, and go to state 66
    MOD    shift, and go to state 68

    $default  reduce using rule 40 ($@11)

    $@11  go to state 159


State 159

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr $@10 COMMA expr $@11 . CLOSEDPR SEMICOLON

    CLOSEDPR  shift, and go to state 160


State 160

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr $@10 COMMA expr $@11 CLOSEDPR . SEMICOLON

    SEMICOLON  shift, and go to state 161


State 161

   41 command: COLOR RGB OPENPR expr $@9 COMMA expr $@10 COMMA expr $@11 CLOSEDPR SEMICOLON .

    $default  reduce using rule 41 (command)
